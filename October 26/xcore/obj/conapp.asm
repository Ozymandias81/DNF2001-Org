; Listing generated by Microsoft (R) Optimizing Compiler Version 12.00.8943.0 

	TITLE	C:\duke4\xcore\conapp.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BF@MBIJ@Cannot?5init?5CPrintfT?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0XListState@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0XChainState@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0XChainState@@QAE@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0MemStats@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?is_locked@XMutex@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0FindState@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?is_done@XConApp@@MAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?return_value@XConApp@@UAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$XChain@VXStatistic@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?get_head@?$XList@VXStatistic@@@@QAEPAVXStatistic@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$XChain@VXStatistic@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?free_list@?$XChain@VXStatistic@@@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$XList@VXStatistic@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$XList@VXStatistic@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?free_list@?$XList@VXStatistic@@@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?add_head@?$XList@VXStatistic@@@@QAEPAU_XPos@@PAVXStatistic@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?remove_head@?$XList@VXStatistic@@@@QAEPAVXStatistic@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$XRcBase@VCStrObj@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$XRcBase@VCStrObj@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$XRcPtr@VCPathObj@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$XRcPtr@VCPathObj@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$XList@VXFindLevel@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$XList@VXFindLevel@@@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSysObj@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GXFindLevel@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?new_node@?$XList@VXStatistic@@@@IAEPAUXNode@1@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?free_nodes@?$XList@VXStatistic@@@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?free_nodes@?$XList@VXFindLevel@@@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DelRef@?$XRcBase@VCStrObj@@@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DelRef@?$XRcPtr@VCPathObj@@@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCStrObj@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCPathObj@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7XConApp@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CMemMap@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7XMutex@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?_conapp@@3PAVXConApp@@A			; _conapp
_BSS	SEGMENT
?_conapp@@3PAVXConApp@@A DD 01H DUP (?)			; _conapp
_BSS	ENDS
PUBLIC	??2@YAPAXI@Z					; operator new
EXTRN	__imp_@xmalloc@4:NEAR
; Function compile flags: /Ogty
; File C:\duke4\xcore\xcore.h
;	COMDAT ??2@YAPAXI@Z
_TEXT	SEGMENT
_size$ = 8
??2@YAPAXI@Z PROC NEAR					; operator new, COMDAT

; 129  : __inline void *operator new(size_t size){return xmalloc(size);}

	mov	ecx, DWORD PTR _size$[esp-4]
	jmp	DWORD PTR __imp_@xmalloc@4
??2@YAPAXI@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX@Z					; operator delete
EXTRN	__imp_@xfree@4:NEAR
; Function compile flags: /Ogty
;	COMDAT ??3@YAXPAX@Z
_TEXT	SEGMENT
_ptr$ = 8
??3@YAXPAX@Z PROC NEAR					; operator delete, COMDAT

; 130  : __inline void operator delete(void *ptr){xfree(ptr);}

	mov	ecx, DWORD PTR _ptr$[esp-4]
	jmp	DWORD PTR __imp_@xfree@4
??3@YAXPAX@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	?is_done@XConApp@@MAEKXZ			; XConApp::is_done
PUBLIC	?app_init@XConApp@@MAEKXZ			; XConApp::app_init
PUBLIC	?app_close@XConApp@@MAEKXZ			; XConApp::app_close
PUBLIC	??0XConApp@@QAE@XZ				; XConApp::XConApp
PUBLIC	?return_value@XConApp@@UAEKXZ			; XConApp::return_value
PUBLIC	??_7XConApp@@6B@				; XConApp::`vftable'
EXTRN	__purecall:NEAR
EXTRN	__imp_?_xapp@@3PAVXApp@@A:DWORD
;	COMDAT ??_7XConApp@@6B@
; File C:\duke4\xcore\xclass.h
CONST	SEGMENT
??_7XConApp@@6B@ DD FLAT:?is_done@XConApp@@MAEKXZ	; XConApp::`vftable'
	DD	FLAT:__purecall
	DD	FLAT:?app_init@XConApp@@MAEKXZ
	DD	FLAT:?app_close@XConApp@@MAEKXZ
	DD	FLAT:?return_value@XConApp@@UAEKXZ
; Function compile flags: /Ogty
; File C:\duke4\xcore\conapp.cpp
CONST	ENDS
_TEXT	SEGMENT
??0XConApp@@QAE@XZ PROC NEAR				; XConApp::XConApp
; _this$ = ecx

; 7    : {

	mov	edx, DWORD PTR __imp_?_xapp@@3PAVXApp@@A
	mov	eax, ecx
	lea	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx], ecx
	xor	edx, edx
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [eax+8], edx
	mov	DWORD PTR [eax+12], edx
	mov	DWORD PTR [eax], OFFSET FLAT:??_7XConApp@@6B@ ; XConApp::`vftable'

; 8    : 	_conapp=this;

	mov	DWORD PTR ?_conapp@@3PAVXConApp@@A, eax	; _conapp

; 9    : }

	ret	0
??0XConApp@@QAE@XZ ENDP					; XConApp::XConApp
; Function compile flags: /Ogty
; File C:\duke4\xcore\conapp.h
_TEXT	ENDS
;	COMDAT ?is_done@XConApp@@MAEKXZ
_TEXT	SEGMENT
?is_done@XConApp@@MAEKXZ PROC NEAR			; XConApp::is_done, COMDAT
; _this$ = ecx

; 17   : 	virtual U32 is_done(void){return run_count;}

	mov	eax, DWORD PTR [ecx+12]
	ret	0
?is_done@XConApp@@MAEKXZ ENDP				; XConApp::is_done
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?return_value@XConApp@@UAEKXZ
_TEXT	SEGMENT
?return_value@XConApp@@UAEKXZ PROC NEAR			; XConApp::return_value, COMDAT
; _this$ = ecx

; 29   : 	virtual U32 return_value(void){return 0;}

	xor	eax, eax
	ret	0
?return_value@XConApp@@UAEKXZ ENDP			; XConApp::return_value
_TEXT	ENDS
PUBLIC	??1XConApp@@QAE@XZ				; XConApp::~XConApp
; Function compile flags: /Ogty
; File C:\duke4\xcore\conapp.cpp
_TEXT	SEGMENT
??1XConApp@@QAE@XZ PROC NEAR				; XConApp::~XConApp
; _this$ = ecx

; 12   : {

	mov	DWORD PTR [ecx], OFFSET FLAT:??_7XConApp@@6B@ ; XConApp::`vftable'

; 13   : 	_conapp=null;
; 14   : }

	mov	eax, DWORD PTR __imp_?_xapp@@3PAVXApp@@A
	mov	DWORD PTR ?_conapp@@3PAVXConApp@@A, 0	; _conapp
	mov	DWORD PTR [eax], 0
	ret	0
??1XConApp@@QAE@XZ ENDP					; XConApp::~XConApp
; Function compile flags: /Ogty
?app_close@XConApp@@MAEKXZ PROC NEAR			; XConApp::app_close
; _this$ = ecx

; 18   : 	return TRUE;

	mov	eax, 1

; 19   : }

	ret	0
?app_close@XConApp@@MAEKXZ ENDP				; XConApp::app_close
; Function compile flags: /Ogty
?app_init@XConApp@@MAEKXZ PROC NEAR			; XConApp::app_init
; _this$ = ecx

; 23   : 	return TRUE;

	mov	eax, 1

; 24   : }

	ret	0
?app_init@XConApp@@MAEKXZ ENDP				; XConApp::app_init
_TEXT	ENDS
PUBLIC	?run@XConApp@@QAEKKPAPBD0@Z			; XConApp::run
EXTRN	__imp_@xxx_fatal@4:NEAR
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
xdata$x	SEGMENT
$T4369	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
$T4371	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L4360
$T4370	DD	00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:$T4371
$T4365	DD	019930520H
	DD	02H
	DD	FLAT:$T4369
	DD	01H
	DD	FLAT:$T4370
	DD	2 DUP(00H)
xdata$x	ENDS
_DATA	SEGMENT
$SG3978	DB	'XConApp::run: Uncaught Exception', 00H
; Function compile flags: /Ogty
_DATA	ENDS
_TEXT	SEGMENT
__$EHRec$ = -16
_Argc$ = 8
_Argv$ = 12
?run@XConApp@@QAEKKPAPBD0@Z PROC NEAR			; XConApp::run
; _this$ = ecx

; 27   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	$L4367
	mov	eax, DWORD PTR fs:__except_list
	push	eax
	mov	DWORD PTR fs:__except_list, esp
	push	ecx

; 28   : 	argc=Argc;

	mov	eax, DWORD PTR _Argc$[ebp]
	push	ebx
	push	esi
	mov	esi, ecx

; 29   : 	argv=Argv;

	mov	ecx, DWORD PTR _Argv$[ebp]
	push	edi
	xor	ebx, ebx
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [esi+8], ecx
	or	edi, -1
$L3975:

; 30   : 
; 31   : 	U32 res;
; 32   : 
; 33   : 	while(!is_done())

	mov	edx, DWORD PTR [esi]
	mov	ecx, esi
	call	DWORD PTR [edx]
	test	eax, eax
	jne	SHORT $L3976

; 34   : 	{
; 35   : 		try
; 36   : 		{
; 37   : 			app_init();

	mov	eax, DWORD PTR [esi]
	mov	ecx, esi
	mov	DWORD PTR __$EHRec$[ebp+12], ebx
	call	DWORD PTR [eax+8]

; 38   : 			res=main();

	mov	edx, DWORD PTR [esi]
	mov	ecx, esi
	call	DWORD PTR [edx+4]

; 39   : 			app_close();

	mov	eax, DWORD PTR [esi]
	mov	ecx, esi
	call	DWORD PTR [eax+12]

; 45   : 		}
; 46   : 		run_count++;

	mov	eax, DWORD PTR [esi+12]
	mov	DWORD PTR __$EHRec$[ebp+12], edi
	inc	eax
	mov	DWORD PTR [esi+12], eax

; 47   : 	}

	jmp	SHORT $L3975
$L4360:

; 40   : 		}
; 41   : 		catch(...)
; 42   : 		{
; 43   : 			xxx_fatal("XConApp::run: Uncaught Exception");

	mov	ecx, OFFSET FLAT:$SG3978
	call	DWORD PTR __imp_@xxx_fatal@4

; 44   : 			return FALSE;

	mov	eax, $L4361
	ret	0
$L4361:
	xor	eax, eax

; 48   : 	return TRUE;
; 49   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:__except_list, ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$L3976:
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	pop	edi
	pop	esi
	mov	eax, 1
	mov	DWORD PTR fs:__except_list, ecx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
text$x	SEGMENT
$L4367:
	mov	eax, OFFSET FLAT:$T4365
	jmp	___CxxFrameHandler
text$x	ENDS
?run@XConApp@@QAEKKPAPBD0@Z ENDP			; XConApp::run
PUBLIC	_main
EXTRN	__imp__exit:NEAR
EXTRN	__imp_?ConMessage@@YAXPBD@Z:NEAR
_DATA	SEGMENT
	ORG $+3
$SG3986	DB	'main: _conapp variable not initialized', 00H
; Function compile flags: /Ogty
_DATA	ENDS
_TEXT	SEGMENT
_argc$ = 8
_argv$ = 12
_envp$ = 16
_main	PROC NEAR

; 53   : 	if (!_conapp)

	mov	ecx, DWORD PTR ?_conapp@@3PAVXConApp@@A	; _conapp
	test	ecx, ecx
	jne	SHORT $L3985

; 54   : 	{
; 55   : 		ConMessage("main: _conapp variable not initialized");

	push	OFFSET FLAT:$SG3986
	call	DWORD PTR __imp_?ConMessage@@YAXPBD@Z
	add	esp, 4

; 56   : 		exit(1);

	push	1
	call	DWORD PTR __imp__exit
$L3985:

; 57   : 	}
; 58   : 	
; 59   : 	_conapp->run(argc,(CC8 **)argv,(CC8 **)envp);

	mov	eax, DWORD PTR _envp$[esp-4]
	mov	edx, DWORD PTR _argv$[esp-4]
	push	eax
	mov	eax, DWORD PTR _argc$[esp]
	push	edx
	push	eax
	call	?run@XConApp@@QAEKKPAPBD0@Z		; XConApp::run

; 60   : 	
; 61   : 	return _conapp->return_value();

	mov	ecx, DWORD PTR ?_conapp@@3PAVXConApp@@A	; _conapp
	mov	edx, DWORD PTR [ecx]
	jmp	DWORD PTR [edx+16]
$L4374:
_main	ENDP
_TEXT	ENDS
END
